[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-16 15:51:01.811256",
  "module": "Formost",
  "name": "Customer",
  "reference_doctype": "Customer",
  "script": "doc.customer_name = doc.customer_name.upper()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-08-16 15:50:54.488413",
  "module": "Formost",
  "name": "Add Purchase Rate to Batch",
  "reference_doctype": "Purchase Receipt",
  "script": "for row in doc.items:\n    if row.batch_no:\n        batch_doc =  frappe.get_doc('Batch', row.batch_no)\n        batch_doc.custom_purchase_rate = row.rate\n        batch_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-16 15:50:24.890750",
  "module": "Formost",
  "name": "Sales Invoice Barcode",
  "reference_doctype": "Sales Invoice",
  "script": "doc.custom_invoice_code = doc.name\n\ndoc.custom_uom_wise_qty_summary = []\nuom_list = frappe.db.get_all('UOM')\nfor row in uom_list:\n    qty = 0\n    for item in doc.items:\n        if row['name'] == item.uom:\n            qty = qty + item.qty\n    if qty:\n        doc.append('custom_uom_wise_qty_summary', {'uom': row['name'],'qty':qty})",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-08-16 15:50:44.580394",
  "module": "Formost",
  "name": "POS Opening, Closing",
  "reference_doctype": "POS Closing Shift",
  "script": "pos_doc = frappe.get_doc('POS Profile', doc.pos_profile)\ncustom_suspense_account = pos_doc.custom_suspense_account\nfor row in doc.payment_reconciliation:\n    if 'Cash' in row.mode_of_payment and row.difference:\n        if row.difference < 0:\n            mode_of_payment_doc = frappe.get_doc('Mode of Payment', row.mode_of_payment)\n            for acc in mode_of_payment_doc.accounts:\n                cash_acc = acc.default_account\n            posting_date = doc.posting_date\n            journal_entry = frappe.get_doc({\n                \"doctype\": \"Journal Entry\",\n                \"posting_date\": posting_date,\n                \"accounts\": [\n                        {\n                            \"account\": custom_suspense_account,\n                            \"debit_in_account_currency\": abs(row.difference),\n                            \"credit_in_account_currency\": 0.00,\n                            \"cost_center\": pos_doc.cost_center\n                        },\n                        {\n                            \"account\": cash_acc,\n                            \"debit_in_account_currency\": 0.00,\n                            \"credit_in_account_currency\": abs(row.difference),\n                            \"cost_center\": pos_doc.cost_center\n                        },\n                    ],\n                \"user_remark\": _(f\"Shortage Difference Amount {doc.name}\"),\n            })\n            \n            journal_entry.insert(ignore_permissions=True)\n            journal_entry.submit()\n        if row.difference > 0:\n            mode_of_payment_doc = frappe.get_doc('Mode of Payment', row.mode_of_payment)\n            for acc in mode_of_payment_doc.accounts:\n                cash_acc = acc.default_account\n            posting_date = doc.posting_date\n            journal_entry = frappe.get_doc({\n                \"doctype\": \"Journal Entry\",\n                \"posting_date\": posting_date,\n                \"accounts\": [\n                        {\n                            \"account\": cash_acc,\n                            \"debit_in_account_currency\": abs(row.difference),\n                            \"credit_in_account_currency\": 0.00,\n                            \"cost_center\": pos_doc.cost_center\n                        },\n                        {\n                            \"account\": custom_suspense_account,\n                            \"debit_in_account_currency\": 0.00,\n                            \"credit_in_account_currency\": abs(row.difference),\n                            \"cost_center\": pos_doc.cost_center\n                        },\n                    ],\n                \"user_remark\": _(f\"Excess Difference Amount {doc.name}\"),\n            })\n            \n            journal_entry.insert(ignore_permissions=True)\n            journal_entry.submit()\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-16 15:50:38.940550",
  "module": "Formost",
  "name": "Batch_id_customization_to_MMYY_format",
  "reference_doctype": "Batch",
  "script": "if doc.reference_doctype==\"Purchase Receipt\":\n    if doc.reference_name:\n        posting_date=frappe.db.get_value(doc.reference_doctype,doc.reference_name,\"posting_date\")\n        doc.manufacturing_date=posting_date\n        if doc.item:\n            custom_series=frappe.db.get_value(\"Item\",doc.item,\"batch_number_series\")\n            if custom_series.split(\".\")[0]:\n                series=custom_series.split(\".\")[0]\n                series_count=custom_series.count(\"#\")\n                # frappe.throw(str(series_count))\n            else:\n                series=\"B\"\n                if custom_series.count(\"#\")>0:\n                    series_count=custom_series.count(\"#\")\n                else:\n                    series_count=3\n            postdate=frappe.utils.formatdate(doc.manufacturing_date,\"YY0MM\") # converting the date to MMYY format\n            # postdate=f'B-{postdate}' # adding expresions\n            data= frappe.db.sql(f\"SELECT * FROM `tabBatch` WHERE batch_id LIKE '%%{series}-{postdate}%%';\",as_dict=0)  # geting the list of data that have same exprtions\n            if len(data)  < 1: # checking if there is no batch as that expretions \n                doc.batch_id= f'{series}-{postdate}-{1:0{series_count}d}' # if not exist sending 001 as defalt\n            else: \n                batch_ids = [item[0] for item in data] # other wise geting all the batch_id from the data\n                numbers = [int(batch_id.split('-')[-1]) for batch_id in batch_ids] # and spliting the expresion from the batch_ids\n                max_number = max(numbers)# geting the  maximun of the number\n                \n                new_number = max_number + 1 # adding one with max_number to get teh next \n                # frappe.throw(str(new_number))\n                doc.batch_id= f'{series}-{postdate}-{new_number:0{series_count}d}' # returning the nuber witeh expresion\n    \n        ",
  "script_type": "DocType Event"
 }
]